# -----------------------------------------------------------------------------------------------------------------------------------------------------
{
	"general":{
		"package":"portainer-ce",
		"name":"Portainer CE",
		"version":"1.0",
		"depends":[
			"docker-ce(>=20.10.2.r2)"
		],
		"developer":"Portainer.io",
		"maintainer":"Portainer",
		"email":"teste74@hotmail.fr",
		"website":"https://www.portainer.io",
		"architecture":"x86-64",
		"firmware":"4.1.0"
	},
	"adm-desktop": {
		"app": {
			"port": 19943,
			"protocol": "https",
			"type": "custom",
			"url": "/" 
		},
		"privilege": {
			"accessible": "users", 
			"customizable": true 
		} 
	},
	"register":{
		"share-folder":[
			{
				"name":"Docker",
				"description":"Data and files directory for Docker Apps"
			}         	
		],
		"boot-priority":{
			"start-order":65,
			"stop-order":35
		},
		"port":[19943]
	}
}

# -----------------------------------------------------------------------------------------------------------------------------------------------------
# pre-install.sh #
#####################
echo "pre-install"
docker pull portainer/portainer-ce:latest




# -----------------------------------------------------------------------------------------------------------------------------------------------------
# Post-install.sh #
###################

if [ ! -z $CONTAINER_TEST ]; then
	docker rm -f $CONTAINER_TEST
fi

#######################################################################################################################################################
# Certficat SSL #
#################
ADM_SSL_FILE=/usr/builtin/etc/certificate/ssl.pem 
PORTAINER_SSL_FILE=/share/Docker/PortainerCE/data/certs/cert.pem
PORTAINER_KEY_FILE=/share/Docker/PortainerCE/data/certs/key.pem

#######################################################################################################################################################
# Mise à jour du Certificat #
#############################
if [ -e $PORTAINER_SSL_FILE ]; then
	# Compare the ADM certificate and the Portainer copied one
	CERT_DIFF=$(diff -bBq $ADM_SSL_FILE $PORTAINER_SSL_FILE | grep differ | awk '{print $5}')
	
	# Before create and start Portainer Container, remove the old certificate if it's existed and different with ADM certificate.
	
	if [ "$CERT_DIFF" == "differ" ]; then
		rm -f $PORTAINER_SSL_FILE
		rm -f $PORTAINER_KEY_FILE
	fi
fi

#######################################################################################################################################################
# Création du Conteneur #
#########################
docker create -i -t --name=PortainerCE \
	-p 19943:9443 \
	-p 19900:9000 \
	-p 19800:8000 \
	-v /var/run/docker.sock:/var/run/docker.sock \
	-v /etc/localtime:/etc/localtime:ro \
	-v /usr/builtin/etc/certificate:/certs:ro \
	-v /share/Docker/PortainerCE/data:/data:rw \
	--restart unless-stopped \
	--label cacher="oui" \
	portainer/portainer-ce:latest \
	--sslcert /certs/ssl.pem --sslkey /certs/ssl.pem \
	 --hide-label cacher="oui";

#######################################################################################################################################################
# Lancement du Conteneur #
##########################
docker start PortainerCE

#######################################################################################################################################################
# Inconnu #
###########
case "$APKG_PKG_STATUS" in
	install)
		;;
	upgrade)
		oldim=$(docker images | grep portainer/portainer-ce | grep none | awk '{print $3}')
		echo $oldim
		
		if [ ! -z $oldim ]; then 
			docker rmi -f $oldim
		fi
		;;
	*)
		;;
esac

exit 0
#######################################################################################################################################################







# -----------------------------------------------------------------------------------------------------------------------------------------------------
# pre-uninstall.sh #
#####################
echo "pre-uninstall"

container=$(docker container ls -a | grep PortainerCE |awk '{print $1}')
im=$(docker images | grep portainer/portainer-ce | grep latest | awk '{print $3}')

echo $container
echo $im

if [ ! -z $container ]; then 
	docker kill $container
	sleep 2
	docker rm -f $container
fi

if [ ! -z $im ]; then 
	if [ "$APKG_PKG_STATUS" == "uninstall" ]; then
		docker rmi -f $im
	fi
fi



# -----------------------------------------------------------------------------------------------------------------------------------------------------
# post-uninstall.sh #
#####################
echo "post-uninstall"





